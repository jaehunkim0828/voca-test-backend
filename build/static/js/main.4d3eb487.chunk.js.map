{"version":3,"sources":["pages/Main.js","pages/Firstpage.js","App.js","reportWebVitals.js","index.js"],"names":["withCookies","props","currentVoca","currentEngVoca","url","cookies","inputRef","useRef","useState","value","setValue","testValue","setTestValue","language","setLanguage","text","clearText","vocalist","setVoca","voca","changeVoca","engText","clearEngText","engVocalist","setEngVoca","vocaObj","setVocaObj","engVoca","changeEngVoca","testVoca2","changeTest","inputs","setInputs","matchInputs","setMatchInputs","score","setScore","conclusion","setConclusion","startTest","lang","question","answer","randomIndex","testQ","slice","testA","currentIndex","length","Math","floor","random","testObj","i","onChange","e","target","name","console","log","finishTest","count","groupConclusion","prop","obj","push","goMain","useEffect","a","axios","post","user_id","get","data","localStorage","removeItem","useBeforeunload","event","preventDefault","style","background","id","marginBottom","fontSize","color","className","width","map","autoComplete","onClick","display","justifyContent","fontWeight","autocomplete","onSubmit","current","focus","window","alert","test","addResult","engvoca","margin","placeholder","ref","type","height","borderRadius","flexDirection","padding","alignItems","confirm","filter","removeVoca","Firstpage","code","password","register","setRegister","clearCode","clearPassword","isNaN","then","response","login","setLogin","loginData","setLoginData","goLogin","result","location","reload","req","userId","token","setItem","catch","err","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","CookiesProvider","document","getElementById"],"mappings":"qRAokBeA,mBA9jBf,SAAcC,GAEZ,IAAIC,EACAC,EACAC,EAAM,6BAEFC,EAAYJ,EAAZI,QAEFC,EAAWC,mBARE,EAUOC,oBAAS,GAVhB,mBAUZC,EAVY,KAULC,EAVK,OAYeF,oBAAS,GAZxB,mBAYZG,EAZY,KAYDC,EAZC,OAcaJ,mBAAS,IAdtB,mBAcZK,EAdY,KAcFC,EAdE,OAgBON,mBAAS,IAhBhB,mBAgBZO,EAhBY,KAgBNC,EAhBM,OAkBSR,mBAAS,IAlBlB,mBAkBZS,EAlBY,KAkBFC,EAlBE,OAsBQV,mBAAS,IAtBjB,mBAsBZW,EAtBY,KAsBNC,EAtBM,OAwBaZ,mBAAS,IAxBtB,mBAwBZa,EAxBY,KAwBHC,EAxBG,OA0Bed,mBAAS,IA1BxB,mBA0BZe,EA1BY,KA0BCC,EA1BD,OA4BWhB,mBAAS,IA5BpB,mBA4BZiB,EA5BY,KA4BHC,EA5BG,OA8BclB,mBAAS,IA9BvB,mBA8BZmB,EA9BY,KA8BHC,GA9BG,QAgCapB,mBAAS,IAhCtB,qBAgCZqB,GAhCY,MAgCDC,GAhCC,SAkCStB,mBAAS,IAlClB,qBAkCZuB,GAlCY,MAkCJC,GAlCI,SAoCmBxB,mBAAS,IApC5B,qBAoCZyB,GApCY,MAoCCC,GApCD,SAsCO1B,mBAAS,IAtChB,qBAsCZ2B,GAtCY,MAsCLC,GAtCK,SAwCiB5B,mBAAS,IAxC1B,qBAwCZ6B,GAxCY,MAwCAC,GAxCA,MAuFbC,GAAY,SAACC,EAAMC,EAAUC,GAQjC,IANA,IAEiCC,EAF7BC,EAAQH,EAASI,QACjBC,EAAQJ,EAAOG,QACfE,EAAeH,EAAMI,OAIlB,IAAMD,GAAc,CAEzBJ,EAAcM,KAAKC,MAAMD,KAAKE,SAAWJ,GACzCA,IAHyB,MAKmB,CAC5CH,EAAMD,GAAcC,EAAMG,IADzBH,EAAMG,GALkB,KAKHH,EAAMD,GALH,WAOmB,CAC5CG,EAAMH,GAAcG,EAAMC,IADzBD,EAAMC,GAPkB,KAOHD,EAAMH,GAPH,KAU3Bb,GAAWc,GAEX,IADA,IAAIQ,EAAU,GACLC,EAAI,EAAGA,EAAIT,EAAMI,OAAQK,GAAK,EACrCD,EAAO,2BACFA,GADE,kBAEJR,EAAMS,GAAKP,EAAMO,KAGtBvC,EAAY0B,GACZR,GAAUoB,GACVxC,GAAa,GACbF,GAAS,IAGL4C,GAAW,SAACC,GAAO,IAAD,EACEA,EAAEC,OAAlB/C,EADc,EACdA,MAAOgD,EADO,EACPA,KACfC,QAAQC,IAAIF,GACZvB,GAAe,2BACVD,IADS,kBAEXwB,EAAOhD,MAgBNmD,GAAa,WAEjB,IACIzB,EADA0B,EAAQ,EAENC,EAAkB,GAGxB,IAAK,IAAMC,KAAQhC,GACjB,GAAKA,GAAOgC,KAAW9B,GAAY8B,GAAQ,CAGzC,IAAMC,EAAM,GACZA,EAAIvB,SAAWsB,EACfC,EAAItB,OAAST,GAAY8B,GACzBC,EAAIvD,MAAQ,eACZqD,EAAgBG,KAAKD,GACrBH,GAAS,MACJ,CAGL,IAAMG,EAAM,GACZA,EAAIvB,SAAWsB,EACfC,EAAItB,OAAST,GAAY8B,GACzBC,EAAIvD,MAAQ,eACZqD,EAAgBG,KAAKD,GAIzB7B,EAAK,UAAM2B,EAAgBd,OAAtB,+BAAoCa,EAApC,uBACLvB,GAAcwB,GACdpD,GAAS,GACT0B,GAASD,GACTD,GAAe,KAIXgC,GAAS,WACbtD,GAAa,GACbF,GAAS,IAwBX,OArBAyD,qBAAU,WAAM,4CAKd,4BAAAC,EAAA,sEACqBC,IAAMC,KAAKlE,EAAK,CAAEmE,QAAUlE,EAAQmE,IAAI,UAD7D,OACQC,EADR,OAEEf,QAAQC,IAAIc,EAAKA,MACjB/C,EAAW+C,EAAKA,MAHlB,4CALc,sBAWd,OATAf,QAAQC,IAAItD,EAAQmE,IAAI,SACxBd,QAAQC,IAAI,SAHE,mCAUda,GACO,WACLd,QAAQC,IAAI,4BACZe,aAAaC,WAAW,aAEzB,IAEHC,aAAgB,SAACC,GAAD,OACdA,EAAMC,oBAIN,qBAAKC,MAAO,CAACC,WAAa,WAA1B,SACE,qBAAKC,GAAG,YAAR,SAEKtE,EA4ID,8BAEiB,QAAbE,EACA,8BAEKJ,EA6DC,gCACA,sBAAKsE,MAAO,CAAEG,aAAe,QAA7B,UACE,sBACEH,MAAO,CACLI,SAAW,SACXC,MAAQ,WAHZ,uBAQA,sBAAML,MAAO,CAAEI,SAAW,SAAUC,MAAQ,WAA5C,0CAEF,sBAAKC,UAAU,iBAAf,UACE,sBAAKN,MAAO,CAAEO,MAAQ,OAAtB,UACI,sBAAKD,UAAU,eAAf,UACI,qBAAKA,UAAU,eAAf,0BACA,qBAAKA,UAAU,eAAf,6BAEF,oBAAIA,UAAU,cAGlBxD,GAAU0D,KAAI,SAACd,EAAMpB,GAAP,OACZ,sBAAK0B,MAAO,CAAEO,MAAQ,OAAtB,UACE,sBAAKD,UAAU,eAAf,UACE,qBAAKA,UAAU,eAAf,SAAuCZ,GAAJpB,GACnC,qBAAKgC,UAAU,eAAf,SACE,uBACEA,UAAU,cACV5B,KAAMgB,EACNnB,SAAUA,GACVkC,aAAa,aAIjB,oBAAIH,UAAU,oBAKxB,qBAAKJ,GAAG,0BAAR,SACE,wBAAQI,UAAU,gBAAgBI,QAAU7B,GAA5C,2CApGJ,gCACE,sBAAKmB,MAAO,CAAEG,aAAe,QAA7B,UACE,sBACEH,MAAO,CACLI,SAAW,SACXC,MAAQ,WAHZ,yBAQA,sBAAML,MAAO,CAAEI,SAAW,SAAUC,MAAQ,WAA5C,2CAEA,sBAAKC,UAAU,iBAAf,UACE,sBAAKN,MAAO,CAAEO,MAAQ,OAAtB,UACI,sBAAKD,UAAU,iBAAf,UACI,qBAAKA,UAAU,eAAf,6CACA,qBAAKA,UAAU,eAAf,6CACA,qBAAKA,UAAU,eAAf,6BAEF,oBAAIA,UAAU,cAGlBhD,GAAWkD,KAAI,SAACd,EAAMpB,GAAP,OACb,sBAAK0B,MAAO,CAAEO,MAAQ,OAAtB,UACE,sBAAKD,UAAU,iBAAf,UACE,qBAAKA,UAAU,eAAf,SAA+BZ,EAAKhC,WACpC,qBAAK4C,UAAU,eAAf,SAA+BZ,EAAK/B,SACpC,qBACE2C,UAAU,eACVN,MAAO,CACLK,MAAuB,iBAAfX,EAAKhE,MAAiB,UAAY,WAH9C,SAMGgE,EAAKhE,WAGR,oBAAI4E,UAAU,oBAKxB,sBAAKN,MAAO,CAAEO,MAAQ,OAAQI,QAAU,OAAQC,eAAiB,iBAAjE,UACE,qBAAKZ,MAAO,CAAEI,SAAW,SAAUS,WAAa,MAAOR,MAAQ,WAA/D,SAA4EjD,KAC5E,sBAAKkD,UAAU,0BAAf,UACE,wBACEA,UAAU,gBACVI,QAAS,kBAAMlD,GAAU,MAAOtB,EAAUM,IAF5C,6CAMA,wBACE8D,UAAU,gBACVI,QAASvB,GAFX,iDAwDZ,8BAEKzD,EA6DC,gCACA,sBAAKsE,MAAO,CAAEG,aAAe,QAA7B,UACE,sBACEH,MAAO,CACLI,SAAW,SACXC,MAAQ,WAHZ,uBAQA,sBAAML,MAAO,CAAEI,SAAW,SAAUC,MAAQ,WAA5C,0CAEF,sBAAKC,UAAU,iBAAf,UACE,sBAAKN,MAAO,CAAEO,MAAQ,OAAtB,UACI,sBAAKD,UAAU,eAAf,UACI,qBAAKA,UAAU,eAAf,0BACA,qBAAKA,UAAU,eAAf,6BAEF,oBAAIA,UAAU,cAGlBxD,GAAU0D,KAAI,SAACd,EAAMpB,GAAP,OACZ,sBAAK0B,MAAO,CAAEO,MAAQ,OAAtB,UACE,sBAAKD,UAAU,eAAf,UACE,qBAAKA,UAAU,eAAf,SAAuCZ,GAAJpB,GACnC,qBAAKgC,UAAU,eAAf,SACE,uBACEA,UAAU,cACV5B,KAAMgB,EACNnB,SAAUA,GACVuC,aAAa,aAIjB,oBAAIR,UAAU,oBAKxB,qBAAKJ,GAAG,0BAAR,SACE,wBAAQI,UAAU,gBAAgBI,QAAU7B,GAA5C,2CApGJ,gCACE,sBAAKmB,MAAO,CAAEG,aAAe,QAA7B,UACE,sBACEH,MAAO,CACLI,SAAW,SACXC,MAAQ,WAHZ,yBAQA,sBAAML,MAAO,CAAEI,SAAW,SAAUC,MAAQ,WAA5C,2CAEA,sBAAKC,UAAU,iBAAf,UACE,sBAAKN,MAAO,CAAEO,MAAQ,OAAtB,UACI,sBAAKD,UAAU,iBAAf,UACI,qBAAKA,UAAU,eAAf,6CACA,qBAAKA,UAAU,eAAf,6CACA,qBAAKA,UAAU,eAAf,6BAEF,oBAAIA,UAAU,cAGlBhD,GAAWkD,KAAI,SAACd,EAAMpB,GAAP,OACb,sBAAK0B,MAAO,CAAEO,MAAQ,OAAtB,UACE,sBAAKD,UAAU,iBAAf,UACE,qBAAKA,UAAU,eAAf,SAA+BZ,EAAKhC,WACpC,qBAAK4C,UAAU,eAAf,SAA+BZ,EAAK/B,SACpC,qBACE2C,UAAU,eACVN,MAAO,CACLK,MAAuB,iBAAfX,EAAKhE,MAAiB,UAAY,WAH9C,SAMGgE,EAAKhE,WAGR,oBAAI4E,UAAU,oBAKxB,sBAAKN,MAAO,CAAEO,MAAQ,OAAQI,QAAU,OAAQC,eAAiB,iBAAjE,UACE,qBAAKZ,MAAO,CAAEI,SAAW,SAAUS,WAAa,MAAOR,MAAQ,WAA/D,SAA4EjD,KAC5E,sBAAKkD,UAAU,0BAAf,UACE,wBACEA,UAAU,gBACVI,QAAS,kBAAMlD,GAAU,MAAOhB,EAAaN,IAF/C,6CAMA,wBACEoE,UAAU,gBACVI,QAASvB,GAFX,mDAhThB,sBAAKe,GAAG,SAAR,UACE,gCACE,qBACEF,MAAO,CACLI,SAAW,SACXC,MAAQ,UACRF,aAAe,QAJnB,6BASA,uBACED,GAAG,gBACHa,SAlLE,SAACvC,GACfA,EAAEuB,iBACFxE,EAASyF,QAAQC,QAIjB,GAAa,KAAT7E,GAA2B,KAAZQ,EACjB,OAAOsE,OAAOC,MAAM,4DACf,IALW,8CAKMC,KAAKhF,GAC3B,OAAO8E,OAAOC,MAAM,4DACf,IANW,WAMMC,KAAKxE,GAC3B,OAAOsE,OAAOC,MAAM,6DAEpBhG,EAAce,GACFgD,KAAK9C,IACjBhB,EAAiBoB,GACF0C,KAAKtC,GAKtB,IAFA,IAAMqC,EAAM,GAEHX,EAAI,EAAGA,EAAIpC,EAAS+B,OAAQK,GAAK,EACxCW,EAAG,KAAW9D,EAAYmD,GAC1BW,EAAG,QAAc7D,EAAekD,GAGlC,IAAM+C,EAAY3E,EAAQoB,QAC1BuD,EAAUnC,KAAKD,GACfN,QAAQC,IAAIyC,GAEZ1E,EAAW0E,GACXlF,EAAQhB,GACRsB,EAAWrB,GACXa,EAAU,IACVM,EAAa,IACbF,EAAW,IACXQ,GAAc,IAEdyC,IAAMC,KAAKlE,EAAK,CACde,KAAMA,EACNkF,QAAS1E,EACT4C,QAASlE,EAAQmE,IAAI,WAuIb,UAIE,sBAAKO,MAAO,CAAEuB,OAAS,cAAvB,UACE,qBAAKvB,MAAO,CAAEa,WAAa,MAAQT,SAAW,UAA9C,yDACA,qBAAKJ,MAAO,CAAEI,SAAW,UAAzB,2GAEF,qBAAKE,UAAU,aAAf,SACE,uBACEkB,YAAY,4BACZlB,UAAU,cACV5B,KAAK,YACL+C,IAAKlG,EACLG,MAAOM,EACPuC,SAAU,SAACC,GACTnC,EAAWmC,EAAEC,OAAO/C,OACpBO,EAAUuC,EAAEC,OAAO/C,YAIzB,qBAAKsE,MAAO,CAAEG,aAAe,QAAUG,UAAU,aAAjD,SACE,uBACEkB,YAAY,4BACZlB,UAAU,cACV5B,KAAK,YACLhD,MAAOY,EACPiC,SAAU,SAACC,GACT3B,GAAc2B,EAAEC,OAAO/C,OACvBa,EAAaiC,EAAEC,OAAO/C,YAI5B,wBACEgG,KAAK,SACLxB,GAAG,UAFL,yCAOF,sBACEF,MAAO,CACLO,MAAQ,OACRN,WAAa,QACb0B,OAAS,OACTC,aAAe,MACfjB,QAAU,OACVkB,cAAgB,SAChBC,QAAU,SACVC,WAAa,SACbnB,eAAiB,gBAVrB,UAaE,sBACEZ,MAAO,CACLO,MAAQ,OACRoB,OAAQ,OACRhB,QAAU,OACVkB,cAAgB,SAChBE,WAAa,SACbnB,eAAgB,iBAPpB,UAUE,qBAAKZ,MAAO,CAAEI,SAAW,SAAUS,WAAa,OAAhD,oDACA,qBAAKb,MAAO,CAAEI,SAAW,UAAzB,sHAEF,sBAAKJ,MAAO,CAAEO,MAAQ,MAAOI,QAAU,OAAQC,eAAiB,gBAAhE,UACE,wBACEN,UAAU,cACVI,QAAS,kBAAMlD,GAAU,MAAOtB,EAAUM,IAF5C,sCAMA,wBACE8D,UAAU,cACVI,QAAS,kBAAMlD,GAAU,MAAOhB,EAAaN,IAF/C,+CASN,sBAAKoE,UAAU,iBAAf,UACE,sBAAKN,MAAO,CAAEG,aAAe,QAA7B,UACE,sBACEH,MAAO,CACLI,SAAW,SACXC,MAAQ,WAHZ,yBAQA,sBAAML,MAAO,CAAEI,SAAW,SAAUC,MAAQ,WAA5C,8DAEF,sBAAKH,GAAG,aAAR,UACE,sBAAKA,GAAG,mBAAR,UACI,sBAAKI,UAAU,eAAf,UACI,qBAAKA,UAAU,eAAf,0BACA,qBAAKA,UAAU,eAAf,0BACA,qBAAKA,UAAU,oBAAf,SACE,qBAAKA,UAAU,0BAGnB,oBAAIA,UAAU,cAGlB5D,EAAQ8D,KAAI,SAACd,EAAMpB,GAAP,OACV,sBAAK0B,MAAO,CAAEO,MAAQ,QAAtB,UACE,sBAAKD,UAAU,eAAf,UACE,qBAAKA,UAAU,eAAf,SAAuCZ,EAAI,MAARpB,GACnC,qBAAKgC,UAAU,eAAf,SAA8CZ,EAAI,SAAfpB,EAAI,MACvC,qBAAKgC,UAAU,oBAAf,SACE,wBACEA,UAAU,cACVI,QAAS,kBA5MhB,SAAChB,EAAMpB,GAGxB,OAAI4C,OAAOc,QAAQ,mEACjB7F,EAAQD,EAAS+F,QAAO,SAAA7F,GAAI,OAAIA,IAASsD,WACzCjD,EAAWD,EAAYyF,QAAO,SAAA7F,GAAI,OAAIA,IAASI,EAAY8B,aAG3D,EAoMqC4D,CAAWxC,EAAMpB,IAFlC,+BAQJ,oBAAIgC,UAAU,iCCrOrB6B,MAhHf,WAEE,IAFmB,EAIa1G,mBAAS,CAAE2G,KAAO,GAAIC,SAAW,KAJ9C,mBAIZC,EAJY,KAIFC,EAJE,OAKO9G,mBAAS,IALhB,mBAKZ2G,EALY,KAKNI,EALM,OAMe/G,mBAAS,IANxB,mBAMZ4G,EANY,KAMFI,EANE,KAQblE,EAAW,SAACC,GAAO,IAAD,EACEA,EAAEC,OAAlB/C,EADc,EACdA,MAAOgD,EADO,EACPA,KACf6D,EAAY,2BACPD,GADM,kBAER5D,EAAOhD,MAkBZ,OACE,qBAAKwE,GAAG,kBAAR,SACE,gCACE,gCACE,qBACEF,MAAO,CACLI,SAAW,SACXC,MAAQ,UACRQ,WAAa,OAJjB,8BASA,qBAAKb,MAAO,CAAEI,SAAW,SAAUC,MAAQ,UAAYF,aAAe,QAAtE,iGAEF,uBAAMD,GAAG,qBAAT,UACE,sBAAKA,GAAG,iBAAR,UACE,qBAAKF,MAAO,CAAEa,WAAa,MAAQT,SAAW,UAA9C,sEACA,sBACEJ,MAAO,CACLI,SAAW,SACXG,MAAQ,OACRI,QAAU,OACVkB,cAAgB,SAChBE,WAAa,UANjB,UASE,0JAGA,sMAGA,gKAGA,iIAKJ,sBAAK7B,GAAG,gBAAR,UACE,sBAAKI,UAAU,oBAAf,UACE,sBAAMA,UAAU,qBAAhB,4DACA,uBACE5B,KAAK,OACL8C,YAAY,kCACZ9F,MAAO0G,EACP9B,UAAU,kBACV/B,SAAU,SAACC,GACTD,EAASC,GACTgE,EAAUhE,EAAEC,OAAO/C,aAIzB,sBAAK4E,UAAU,oBAAf,UACE,sBAAMA,UAAU,qBAAhB,2DACA,uBACE5B,KAAK,WACL8C,YAAY,yDACZE,KAAK,WACLhG,MAAO2G,EACP/B,UAAU,kBACV/B,SAAU,SAACC,GACTD,EAASC,GACTiE,EAAcjE,EAAEC,OAAO/C,gBAK/B,wBACEwE,GAAG,kBACHQ,QAtFM,SAAClC,GACfA,EAAEuB,iBAC8B,IAA5BuC,EAAQ,KAASrE,QAAgD,IAAhCqE,EAAQ,SAAarE,OACxDiD,OAAOC,MAAM,4DACJuB,MAAMJ,EAAQ,WAAiD,IAAhCA,EAAQ,SAAarE,OAC7DiD,OAAOC,MAAM,0GAEbqB,EAAU,IACVC,EAAc,IACdnD,IAAMC,KAvBA,6BAuBU+C,GACbK,MAAK,SAAAC,GAAQ,OAAIjE,QAAQC,IAAI,qBA0E5B,+E,MCyBK3D,mBAxHf,SAAaC,GAEX,IAAIG,EAAM,8BAFQ,EAIQI,mBAAS,gBAJjB,mBAIXoH,EAJW,KAIJC,EAJI,OAKgBrH,mBAAS,CAAE2G,KAAO,GAAIC,SAAW,KALjD,mBAKXU,EALW,KAKAC,EALA,KAOZzE,EAAW,SAACC,GAAO,IAAD,EACEA,EAAEC,OAAlB/C,EADc,EACdA,MAAOgD,EADO,EACPA,KACfsE,EAAa,2BACRD,GADO,kBAETrE,EAAOhD,MAYNuH,EAAO,uCAAG,4BAAA5D,EAAA,sEACKC,IAAMG,IAAIpE,GADf,OACRqE,EADQ,OAEdf,QAAQC,IAAIc,EAAO,gBACnBoD,EAAS,gBAHK,2CAAH,qDAqCb,OAhBA1D,qBAAU,WACR,IAAI8D,EAAS,eADC,4CAEd,4BAAA7D,EAAA,sEACqBC,IAAMC,KAAKlE,EAAI,IADpC,OACQqE,EADR,OAEEf,QAAQC,WAAWc,EAAKA,MACpBA,EAAKA,OACPwD,EAAS,gBAEXJ,EAASI,GANX,4CAFc,sBAWd,OAXc,mCAUd3D,GACO,eAEN,IAID,sBAAKS,MAAO,CAAE2B,OAAS,QAAvB,UACE,sBAAKzB,GAAG,MAAR,UACE,yBAAQA,GAAG,OAAOQ,QA5CR,WACdQ,OAAOiC,SAASC,UA2CZ,UACE,4CACA,qBACEpD,MAAO,CACLI,SAAW,SACXG,MAAQ,OACRI,QAAU,OACVC,eAAiB,UALrB,sDAYU,iBAAViC,EACA,uBACE3C,GAAG,YACHa,SAnDI,SAACvC,GACbA,EAAEuB,iBACFT,IAAMC,KAAKlE,EAAK0H,GACbJ,MAAK,SAAAU,GACJ1E,QAAQC,IAAIyE,EAAI3D,KAAK4D,QACrB,IAAMC,EAAQF,EAAI3D,KAAK4D,OACvB3D,aAAa6D,QAAQ,SAAUD,GAnBnCT,EAAS,mBAsBNW,OAAM,SAAAC,GACL/E,QAAQC,IAAI8E,GACZxC,OAAOC,MAAM,gGAsCX,UAIE,uBACE5C,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1B8B,UAAU,eACVkB,YAAY,kCACZ9C,KAAK,OACLgD,KAAK,SAEP,uBACEnD,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1B8B,UAAU,eACVkB,YAAY,wCACZ9C,KAAK,WACLgD,KAAK,aAEP,wBAAQxB,GAAI,eAAewB,KAAK,SAAhC,mCAKF,wBACEhB,QAASuC,EADX,yCAOJ,qBAAKjD,MAAO,CAAE2B,OAAS,QAAvB,SAEc,iBAAVkB,EACA,cAAC,EAAD,IAEA,cAAC,EAAD,Y,QC7GKc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4d3eb487.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { useBeforeunload } from \"react-beforeunload\";\nimport axios from 'axios';\nimport { withCookies } from 'react-cookie';\n\n\nfunction Main(props) {\n\n  let currentVoca;\n  let currentEngVoca;\n  let url = 'http://127.0.0.1:5000/voca';\n\n  const { cookies } = props;\n\n  const inputRef = useRef();\n\n  const [value, setValue] = useState(true);\n\n  const [testValue, setTestValue] = useState(false);\n  \n  const [language, setLanguage] = useState('');\n\n  const [text, clearText] = useState('');\n\n  const [vocalist, setVoca] = useState([]);\n\n  // const [userId, setUserId] = useState(0);\n\n  const [voca, changeVoca] = useState('');\n\n  const [engText, clearEngText] = useState('');\n\n  const [engVocalist, setEngVoca] = useState([]);\n\n  const [vocaObj, setVocaObj] = useState([]);\n\n  const [engVoca, changeEngVoca] = useState('');\n\n  const [testVoca2, changeTest] = useState([]);\n\n  const [inputs, setInputs] = useState({});\n\n  const [matchInputs, setMatchInputs] = useState({});\n\n  const [score, setScore] = useState('');\n\n  const [conclusion, setConclusion] = useState([]); \n\n  const addVoca = (e) => {\n    e.preventDefault();\n    inputRef.current.focus();\n    var pattern_kor = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/;\n    var pattern_eng = /[a-zA-Z]/;\t\n\n    if (voca === '' || engVoca === '') {\n      return window.alert(\"단어를 입력해주세요.\");\n    } else if (!pattern_kor.test(voca)) {\n      return window.alert(\"한글로 작성해주세요.\")\n    } else if (!pattern_eng.test(engVoca)) {\n      return window.alert(\"영어로 작성해주세요.\")\n    } else {\n      currentVoca = vocalist;\n      currentVoca.push(voca);\n      currentEngVoca = engVocalist;\n      currentEngVoca.push(engVoca);\n    }\n\n    const obj = {};\n\n    for (var i = 0; i < vocalist.length; i += 1) {\n      obj[\"voca\"] = currentVoca[i];\n      obj[\"engvoca\"] = currentEngVoca[i];\n  \n    }\n    const addResult = vocaObj.slice();\n    addResult.push(obj);\n    console.log(addResult);\n\n    setVocaObj(addResult);\n    setVoca(currentVoca);\n    setEngVoca(currentEngVoca);\n    clearText('');\n    clearEngText('');\n    changeVoca('');\n    changeEngVoca('');\n\n    axios.post(url, {\n      voca: voca,\n      engvoca: engVoca,\n      user_id: cookies.get('user'),\n    })\n  }\n\n  const startTest = (lang, question, answer) => {\n\n    var testQ = question.slice();\n    var testA = answer.slice();\n    var currentIndex = testQ.length, randomIndex;\n\n    //만약에 conclusion\n    \n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      // And swap it with the current element.\n      [testQ[currentIndex], testQ[randomIndex]] = [\n      testQ[randomIndex], testQ[currentIndex]];\n      [testA[currentIndex], testA[randomIndex]] = [\n      testA[randomIndex], testA[currentIndex]];\n    }\n    changeTest(testQ);\n    var testObj = {};\n    for (let i = 0; i < testQ.length; i += 1) {\n      testObj = {\n        ...testObj,\n        [testQ[i]]: testA[i],\n      }\n    }\n    setLanguage(lang);\n    setInputs(testObj);\n    setTestValue(true);\n    setValue(true);\n  }\n  \n  const onChange = (e) => {\n    const { value, name } = e.target; \n    console.log(name);\n    setMatchInputs({\n      ...matchInputs, \n      [name]: value \n    });\n  };\n\n  const removeVoca = (data, i) => {\n    // vocalist.splice(i, 1)\n    // engVocalist.splice(i, 1)\n    if (window.confirm('정말 삭제하시겠습니까?')) {\n      setVoca(vocalist.filter(voca => voca !== data));\n      setEngVoca(engVocalist.filter(voca => voca !== engVocalist[i]));\n      return;\n    } else {\n      return;\n    }  \n  }\n  \n  const finishTest = () => {\n    // let conclusionAnswer;\n    let count = 0;\n    let score;\n    const groupConclusion = [];\n    \n\n    for (const prop in inputs) {\n      if ( inputs[prop] ===  matchInputs[prop] ) { \n        // conclusionAnswer = `${prop} (${matchInputs[prop]}) 정답`;\n        // groupConclusion.push(conclusionAnswer);\n        const obj = {};\n        obj.question = prop;\n        obj.answer = matchInputs[prop];\n        obj.value = \"정답\";\n        groupConclusion.push(obj);\n        count += 1;\n      } else {       \n        // conclusionAnswer = `${prop} (${matchInputs[prop]}) 오답`;\n        // groupConclusion.push(conclusionAnswer);\n        const obj = {};\n        obj.question = prop;\n        obj.answer = matchInputs[prop];\n        obj.value = \"오답\";\n        groupConclusion.push(obj);\n      }\n    }\n\n    score = `${groupConclusion.length}개 중에 ${count}개 정답`;\n    setConclusion(groupConclusion);\n    setValue(false);\n    setScore(score);\n    setMatchInputs({});\n\n  }\n\n  const goMain = () => {\n    setTestValue(false);\n    setValue(true);\n  }\n\n  useEffect(() => {\n\n    console.log(cookies.get('user'));\n    console.log('hello');\n\n    async function get() {\n      const data = await axios.post(url, { user_id : cookies.get('user')});\n      console.log(data.data);\n      setVocaObj(data.data);\n    }\n    get();\n    return () => {\n      console.log('로그아웃');\n      localStorage.removeItem('userId');\n    };\n  }, []);\n\n  useBeforeunload((event) => \n    event.preventDefault()\n  );  \n\n  return (\n    <div style={{background : \"#8FC0A9\"}}>\n      <div id=\"container\">\n        {\n          !testValue ?\n          <div id='page-1'>\n            <div>\n              <div \n                style={{ \n                  fontSize : \"1.5rem\",\n                  color : \"#FAF3DD\",\n                  marginBottom : \"1rem\"\n                }}\n              >\n                Enter the Words\n              </div>\n              <form\n                id=\"add-container\"\n                onSubmit={addVoca}\n              >\n                <div style={{ margin : \"0 0 1rem 0\" }}>\n                  <div style={{ fontWeight : \"600\" , fontSize : \"1.3rem\" }}>영단어 기록하기</div>\n                  <div style={{ fontSize : \"0.5rem\" }}>단어장에 영단어를 기입하십시요\u001c</div>\n                </div>\n                <div className=\"voca-input\">\n                  <input\n                    placeholder=\"한글 입력\"\n                    className=\"input-style\"\n                    name=\"kor-input\"\n                    ref={inputRef}\n                    value={text}\n                    onChange={(e) => {\n                      changeVoca(e.target.value);\n                      clearText(e.target.value);\n                    }}\n                  />\n                </div>\n                <div style={{ marginBottom : \"4rem\" }} className=\"voca-input\">\n                  <input\n                    placeholder=\"영어 입력\"\n                    className=\"input-style\"\n                    name=\"eng-input\"\n                    value={engText}\n                    onChange={(e) => {\n                      changeEngVoca(e.target.value);\n                      clearEngText(e.target.value);\n                    }}\n                  />\n                </div>\n                <button\n                  type='submit'\n                  id='Jbutton'\n                >\n                  기록하기\n                </button>\n              </form>\n              <div \n                style={{\n                  width : \"100%\",\n                  background : \"white\",\n                  height : \"9rem\",\n                  borderRadius : \"5px\",\n                  display : \"flex\",\n                  flexDirection : \"column\",\n                  padding : \"1rem 0\",\n                  alignItems : \"center\",\n                  justifyContent : \"space-around\"\n                }}\n              >\n                <div\n                  style={{\n                    width : \"100%\",\n                    height: \"3rem\",                                      \n                    display : \"flex\",\n                    flexDirection : \"column\",                  \n                    alignItems : \"center\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  <div style={{ fontSize : \"1.2rem\", fontWeight : \"600\" }}>단어 시험 보기</div>\n                  <div style={{ fontSize : \"0.8rem\" }}>열심히 공부했나요? 영단어 테스트 보기</div>\n                </div>\n                <div style={{ width : \"80%\", display : \"flex\", justifyContent : \"space-around\"}}>\n                  <button\n                    className=\"test-button\"\n                    onClick={() => startTest('kor', vocalist, engVocalist)}\n                  >\n                    한글시험\n                  </button>\n                  <button\n                    className=\"test-button\"\n                    onClick={() => startTest('eng', engVocalist, vocalist)}\n                  >\n                    영어시험\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div className=\"voca-container\">\n              <div style={{ marginBottom : \"1rem\"}}>\n                <span \n                  style={{ \n                    fontSize : \"1.5rem\",\n                    color : \"#FAF3DD\"\n                  }}\n                >\n                  My WordBook\n                </span>\n                <span style={{ fontSize : \"0.8rem\", color : \"#FAF3DD\" }}> 내가 기록한 단어</span>\n              </div>\n              <div id=\"vocabulary\">\n                <div id=\"vocabulary-intro\">\n                    <div className='row-vocalist'>\n                        <div className=\"voca-element\">한글</div>\n                        <div className=\"voca-element\">영어</div>\n                        <div className=\"voca-remove-cover\">\n                          <div className=\"voca-remove-emty\"/>\n                        </div>\n                      </div>\n                      <hr className=\"driver\" />\n                </div>\n                {\n                  vocaObj.map((data, i) => (\n                    <div style={{ width : \"100%\" }}>\n                      <div className='row-vocalist'>\n                        <div className=\"voca-element\" key={i}>{data['voca']}</div>\n                        <div className=\"voca-element\" key={i + 'en'}>{data['engvoca']}</div>\n                        <div className=\"voca-remove-cover\">\n                          <button \n                            className=\"voca-remove\"\n                            onClick={() => removeVoca(data, i)}\n                          >\n                            삭제\n                          </button>\n                        </div>\n                      </div>\n                      <hr className=\"driver\" />\n                    </div>\n                  ))\n                }\n              </div>\n            </div>\n          </div>\n            :\n          <div> \n            {\n              language === 'kor' ?\n              <div>\n                {\n                  !value ?\n                  <div>\n                    <div style={{ marginBottom : \"1rem\"}}>\n                      <span \n                        style={{ \n                          fontSize : \"1.5rem\",\n                          color : \"#FAF3DD\"\n                        }}\n                      >\n                        Test Result\n                      </span>\n                      <span style={{ fontSize : \"0.8rem\", color : \"#FAF3DD\" }}> 시험 결과</span>\n                    </div>\n                      <div className=\"test-container\">\n                        <div style={{ width : \"90%\" }}>\n                            <div className='row-testlist-2'>\n                                <div className=\"voca-element\">입력한 한글</div>\n                                <div className=\"voca-element\">입력한 영어</div>\n                                <div className=\"voca-element\">결과</div>\n                              </div>\n                              <hr className=\"driver\" />\n                        </div>\n                        {\n                          conclusion.map((data, i) => (\n                            <div style={{ width : \"90%\"}}>\n                              <div className='row-testlist-2'>\n                                <div className=\"voca-element\">{data.question}</div>\n                                <div className=\"voca-element\">{data.answer}</div>\n                                <div \n                                  className=\"voca-element\" \n                                  style={{ \n                                    color : data.value === \"정답\" ? \"#39A2DB\" : \"#F55C47\"\n                                  }}\n                                >\n                                  {data.value}\n                                </div>\n                              </div>\n                                <hr className=\"driver\" />\n                            </div>\n                          ))\n                        }\n                      </div>\n                      <div style={{ width : \"100%\", display : \"flex\", justifyContent : \"space-between\"}}>\n                        <div style={{ fontSize : \"1.2rem\", fontWeight : \"600\", color : \"#FAF3DD\"}}>{score}</div>\n                        <div className=\"finish-button-container\">\n                          <button \n                            className=\"finish-button\"\n                            onClick={() => startTest('kor', vocalist, engVocalist)}\n                          >\n                            재시험 보기\n                          </button>\n                          <button\n                            className=\"finish-button\"\n                            onClick={goMain}\n                          >\n                            돌아가기\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                      :\n                    <div>\n                    <div style={{ marginBottom : \"1rem\"}}>\n                      <span \n                        style={{ \n                          fontSize : \"1.5rem\",\n                          color : \"#FAF3DD\"\n                        }}\n                      >\n                        Test Word\n                      </span>\n                      <span style={{ fontSize : \"0.8rem\", color : \"#FAF3DD\" }}> 단어시험</span>\n                    </div>\n                    <div className=\"test-container\">\n                      <div style={{ width : \"90%\" }}>\n                          <div className='row-testlist'>\n                              <div className=\"voca-element\">한글</div>\n                              <div className=\"voca-element\">영어</div>\n                            </div>\n                            <hr className=\"driver\" />\n                      </div>\n                      {\n                        testVoca2.map((data, i) => (\n                          <div style={{ width : \"90%\" }}>\n                            <div className='row-testlist'>\n                              <div className=\"voca-element\" key={i}>{data}</div>\n                              <div className=\"voca-element\">\n                                <input \n                                  className=\"test-inputs\" \n                                  name={data} \n                                  onChange={onChange}\n                                  autoComplete='off'\n                                />\n                              </div>\n                            </div>\n                              <hr className=\"driver\" />\n                          </div>\n                        ))\n                      }\n                    </div>\n                    <div id=\"finish-button-container\">\n                      <button className=\"finish-button\" onClick= {finishTest}>시험종료</button>\n                    </div>\n                  </div>\n                }\n              </div>\n                :\n              <div>\n                {\n                  !value ?\n                  <div>\n                    <div style={{ marginBottom : \"1rem\"}}>\n                      <span \n                        style={{ \n                          fontSize : \"1.5rem\",\n                          color : \"#FAF3DD\"\n                        }}\n                      >\n                        Test Result\n                      </span>\n                      <span style={{ fontSize : \"0.8rem\", color : \"#FAF3DD\" }}> 시험 결과</span>\n                    </div>\n                      <div className=\"test-container\">\n                        <div style={{ width : \"90%\" }}>\n                            <div className='row-testlist-2'>\n                                <div className=\"voca-element\">입력한 영어</div>\n                                <div className=\"voca-element\">입력한 한글</div>\n                                <div className=\"voca-element\">결과</div>\n                              </div>\n                              <hr className=\"driver\" />\n                        </div>\n                        {\n                          conclusion.map((data, i) => (\n                            <div style={{ width : \"90%\"}}>\n                              <div className='row-testlist-2'>\n                                <div className=\"voca-element\">{data.question}</div>\n                                <div className=\"voca-element\">{data.answer}</div>\n                                <div \n                                  className=\"voca-element\" \n                                  style={{ \n                                    color : data.value === \"정답\" ? \"#39A2DB\" : \"#F55C47\"\n                                  }}\n                                >\n                                  {data.value}\n                                </div>\n                              </div>\n                                <hr className=\"driver\" />\n                            </div>\n                          ))\n                        }\n                      </div>\n                      <div style={{ width : \"100%\", display : \"flex\", justifyContent : \"space-between\"}}>\n                        <div style={{ fontSize : \"1.2rem\", fontWeight : \"600\", color : \"#FAF3DD\"}}>{score}</div>\n                        <div className=\"finish-button-container\">\n                          <button \n                            className=\"finish-button\"\n                            onClick={() => startTest('Eng', engVocalist, vocalist)}\n                          >\n                            재시험 보기\n                          </button>\n                          <button\n                            className=\"finish-button\"\n                            onClick={goMain}\n                          >\n                            돌아가기\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                      :\n                    <div>\n                    <div style={{ marginBottom : \"1rem\"}}>\n                      <span \n                        style={{ \n                          fontSize : \"1.5rem\",\n                          color : \"#FAF3DD\"\n                        }}\n                      >\n                        Test Word\n                      </span>\n                      <span style={{ fontSize : \"0.8rem\", color : \"#FAF3DD\" }}> 단어시험</span>\n                    </div>\n                    <div className=\"test-container\">\n                      <div style={{ width : \"90%\" }}>\n                          <div className='row-testlist'>\n                              <div className=\"voca-element\">영어</div>\n                              <div className=\"voca-element\">한글</div>\n                            </div>\n                            <hr className=\"driver\" />\n                      </div>\n                      {\n                        testVoca2.map((data, i) => (\n                          <div style={{ width : \"90%\" }}>\n                            <div className='row-testlist'>\n                              <div className=\"voca-element\" key={i}>{data}</div>\n                              <div className=\"voca-element\">\n                                <input \n                                  className=\"test-inputs\" \n                                  name={data} \n                                  onChange={onChange}\n                                  autocomplete='off'\n                                />\n                              </div>\n                            </div>\n                              <hr className=\"driver\" />\n                          </div>\n                        ))\n                      }\n                    </div>\n                    <div id=\"finish-button-container\">\n                      <button className=\"finish-button\" onClick= {finishTest}>시험종료</button>\n                    </div>\n                  </div>\n                }\n              </div>\n            }\n          </div>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default withCookies(Main);\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction Firstpage() {\n\n  let url = 'http://localhost:5000/user';\n  \n  const [register, setRegister] = useState({ code : '', password : ''});\n  const [code, clearCode] = useState('');\n  const [password, clearPassword] = useState('');\n\n  const onChange = (e) => {\n    const { value, name } = e.target; \n    setRegister({\n      ...register, \n      [name]: value \n    });\n  };\n\n  const addUser = (e) => {\n    e.preventDefault();\n    if (register[\"code\"].length === 0 || register[\"password\"].length === 0) {\n      window.alert('빈공간없게 해주세요.');\n    } else if (isNaN(register[\"password\"]) || register[\"password\"].length !== 4) {\n      window.alert('비밀번호는 숫자와 4자리로 맞춰주세요.');\n    } else {\n      clearCode('');\n      clearPassword('');\n      axios.post(url, register)\n        .then(response => console.log('성공'));\n    }\n  }\n\n  return (\n    <div id=\"login-container\">\n      <div>\n        <div>\n          <div \n            style={{ \n              fontSize : \"1.5rem\",\n              color : \"#FAF3DD\",\n              fontWeight : \"600\"\n            }}\n          >\n            Make my WordNote\n          </div>\n          <div style={{ fontSize : \"0.8rem\", color : \"#FAF3DD\" , marginBottom : \"1rem\"}}>나만의 단어장을 만들어보세요</div>\n        </div>\n        <form id=\"register-container\">\n          <div id='register-title'>\n            <div style={{ fontWeight : \"600\" , fontSize : \"1.3rem\" }}>나만의 단어장 만들기</div>\n            <div\n              style={{ \n                fontSize : \"0.7rem\",\n                width : \"100%\",\n                display : \"flex\",\n                flexDirection : \"column\",\n                alignItems : \"center\",\n                }}\n            >\n              <div>\n                공부한 영어단어를 기입할 단어장을 만드세요.\n              </div>\n              <div>\n                단어장 이름과 비밀번호로 나만의 단어장을 생성할수 있습니다.\n              </div>\n              <div>\n                만들어진  단어장의 이름과 비밀번호를 입력하면 \n              </div>\n              <div>\n                언제든지 다시 들어갈 수 있도록요\n              </div>\n            </div>\n          </div>\n          <div id=\"register-text\">\n            <div className=\"register-text-row\">\n              <span className=\"register-text-name\">나의 단어장 이름: </span>\n              <input \n                name=\"code\"\n                placeholder=\"단어장 입력\"\n                value={code}\n                className=\"register-inputs\"\n                onChange={(e) => {\n                  onChange(e);\n                  clearCode(e.target.value);\n                }}\n              />\n            </div>\n            <div className=\"register-text-row\">\n              <span className=\"register-text-name\">단어장 비밀번호: </span>\n              <input \n                name=\"password\"\n                placeholder=\"비밀번호 (숫자, 4자리)\"\n                type=\"password\"\n                value={password}\n                className=\"register-inputs\"\n                onChange={(e) => {\n                  onChange(e);\n                  clearPassword(e.target.value);\n                }}\n              />\n            </div>\n          </div>\n          <button\n            id=\"register-button\"\n            onClick={addUser}\n          >\n            새로운 단어장 만들기\n          </button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default Firstpage;","import React,{ useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { withCookies } from 'react-cookie';\n\nimport Main from './pages/Main';\nimport Firstpage from './pages/Firstpage';\nimport './App.css';\n\nfunction App(props) {\n\n  let url = 'http://localhost:5000/login';\n\n  const [login, setLogin] = useState(\"실패\");\n  const [loginData, setLoginData] = useState({ code : '', password : ''});\n\n  const onChange = (e) => {\n    const { value, name } = e.target; \n    setLoginData({\n      ...loginData, \n      [name]: value \n    });\n  };\n\n  const goMain = () => {\n    setLogin('성공');\n  }\n\n  const refresh = () => {\n    window.location.reload();\n  }\n\n  const goLogin = async () => {\n    const data = await axios.get(url);\n    console.log(data + '성공');\n    setLogin('실패');\n  }\n\n  const check = (e) => {\n    e.preventDefault();\n    axios.post(url, loginData)\n      .then(req => {\n        console.log(req.data.userId);\n        const token = req.data.userId;\n        localStorage.setItem('userId', token);\n        goMain();\n      })\n      .catch(err => {\n        console.log(err);\n        window.alert('아이디, 비밀번호를 확인해주세요.');\n      })\n  }\n\n  useEffect(() => {\n    let result = '실패';\n    async function post() {\n      const data = await axios.post(url,{});\n      console.log(typeof data.data);\n      if (data.data) {\n        result = '성공';\n      }\n      setLogin(result);\n    }\n    post();\n    return () => {\n    };\n  }, []);\n\n\n  return (\n    <div style={{ height : \"100%\"}}>\n      <div id=\"nav\">\n        <button id=\"logo\" onClick={refresh}>\n          <div>Word Note</div>\n          <div \n            style={{ \n              fontSize : \"1.1rem\",\n              width : \"100%\",  \n              display : \"flex\", \n              justifyContent : \"center\"\n            }}\n          >\n            나만의 단어장\n          </div>\n        </button>\n        {\n          login === '실패' ?\n          <form\n            id=\"nav-login\"\n            onSubmit={check}\n          >\n            <input \n              onChange={(e) => onChange(e)}\n              className=\"login-inputs\"\n              placeholder=\"단어장 입력\"\n              name=\"code\"\n              type='text'\n            />\n            <input \n              onChange={(e) => onChange(e)}\n              className=\"login-inputs\"\n              placeholder=\"비밀번호 입력\"\n              name=\"password\"\n              type='password'\n            />\n            <button id =\"login-button\" type=\"submit\" >\n              로그인\n            </button>\n          </form>\n            :\n          <button\n            onClick={goLogin}\n          >\n            로그아웃\n          </button>\n        }\n      </div>\n      <div style={{ height : '100%' }}>\n        {\n          login === '성공' ?\n          <Main />\n            :\n          <Firstpage />\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default withCookies(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { CookiesProvider } from 'react-cookie';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <CookiesProvider>\n    <App />\n  </CookiesProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}