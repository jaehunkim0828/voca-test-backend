{"version":3,"sources":["pages/Main.js","pages/Firstpage.js","App.js","reportWebVitals.js","index.js"],"names":["withCookies","props","currentVoca","currentEngVoca","url","cookies","inputRef","useRef","useState","value","setValue","testValue","setTestValue","language","setLanguage","text","clearText","vocalist","setVoca","voca","changeVoca","engText","clearEngText","engVocalist","setEngVoca","vocaObj","setVocaObj","engVoca","changeEngVoca","testVoca2","changeTest","inputs","setInputs","matchInputs","setMatchInputs","score","setScore","conclusion","setConclusion","startTest","lang","question","answer","randomIndex","testQ","slice","testA","currentIndex","length","Math","floor","random","testObj","i","onChange","e","target","name","finishTest","count","groupConclusion","prop","obj","push","goMain","useEffect","a","axios","post","data","get","localStorage","removeItem","useBeforeunload","event","preventDefault","style","background","id","marginBottom","fontSize","color","className","width","map","autoComplete","onClick","display","justifyContent","fontWeight","autocomplete","onSubmit","current","focus","window","alert","test","addResult","engvoca","user_id","margin","placeholder","ref","type","height","borderRadius","flexDirection","padding","alignItems","confirm","filter","currentObj","splice","delete","userId","then","removeVoca","Firstpage","useAlert","code","password","register","setRegister","clearCode","clearPassword","imeMode","isNaN","console","log","success","catch","err","error","login","setLogin","loginData","setLoginData","goLogin","result","location","href","textDecoration","req","token","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","options","timeout","position","positions","BOTTOM_CENTER","ReactDOM","render","CookiesProvider","template","AlertTemplate","document","getElementById"],"mappings":"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","file":"static/js/main.cd03debd.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { useBeforeunload } from \"react-beforeunload\";\nimport axios from 'axios';\nimport { withCookies } from 'react-cookie';\n\n\nfunction Main(props) {\n\n  let currentVoca;\n  let currentEngVoca;\n  let url = 'http://3.34.140.114:5000/voca';\n\n  const { cookies } = props;\n\n  const inputRef = useRef();\n\n  const [value, setValue] = useState(true);\n\n  const [testValue, setTestValue] = useState(false);\n  \n  const [language, setLanguage] = useState('');\n\n  const [text, clearText] = useState('');\n\n  const [vocalist, setVoca] = useState([]);\n\n  const [voca, changeVoca] = useState('');\n\n  const [engText, clearEngText] = useState('');\n\n  const [engVocalist, setEngVoca] = useState([]);\n\n  const [vocaObj, setVocaObj] = useState([]);\n\n  const [engVoca, changeEngVoca] = useState('');\n\n  const [testVoca2, changeTest] = useState([]);\n\n  const [inputs, setInputs] = useState({});\n\n  const [matchInputs, setMatchInputs] = useState({});\n\n  const [score, setScore] = useState('');\n\n  const [conclusion, setConclusion] = useState([]); \n\n  const addVoca = (e) => {\n    e.preventDefault();\n    inputRef.current.focus();\n    var pattern_kor = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/;\n    var pattern_eng = /[a-zA-Z]/;\t\n\n    if (voca === '' || engVoca === '') {\n      return window.alert(\"단어를 입력해주세요.\");\n    } else if (!pattern_kor.test(voca)) {\n      return window.alert(\"한글로 작성해주세요.\")\n    } else if (!pattern_eng.test(engVoca)) {\n      return window.alert(\"영어로 작성해주세요.\")\n    } else {\n      currentVoca = vocalist;\n      currentVoca.push(voca);\n      currentEngVoca = engVocalist;\n      currentEngVoca.push(engVoca);\n    }\n\n    const obj = {};\n\n    for (var i = 0; i < vocalist.length; i += 1) {\n      obj[\"voca\"] = currentVoca[i];\n      obj[\"engvoca\"] = currentEngVoca[i];\n    }\n    const addResult = vocaObj.slice();\n    addResult.push(obj);\n\n    setVocaObj(addResult);\n    setVoca(currentVoca);\n    setEngVoca(currentEngVoca);\n    clearText('');\n    clearEngText('');\n    changeVoca('');\n    changeEngVoca('');\n\n    axios.post(url, {\n      voca: voca,\n      engvoca: engVoca,\n      user_id: cookies.get('user'),\n    })\n  }\n\n  const startTest = (lang, question, answer) => {\n\n    var testQ = question.slice();\n    var testA = answer.slice();\n    var currentIndex = testQ.length, randomIndex;\n\n    //만약에 conclusion\n    \n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      // And swap it with the current element.\n      [testQ[currentIndex], testQ[randomIndex]] = [\n      testQ[randomIndex], testQ[currentIndex]];\n      [testA[currentIndex], testA[randomIndex]] = [\n      testA[randomIndex], testA[currentIndex]];\n    }\n    changeTest(testQ);\n    var testObj = {};\n    for (let i = 0; i < testQ.length; i += 1) {\n      testObj = {\n        ...testObj,\n        [testQ[i]]: testA[i],\n      }\n    }\n    setLanguage(lang);\n    setInputs(testObj);\n    setTestValue(true);\n    setValue(true);\n  }\n  \n  const onChange = (e) => {\n    const { value, name } = e.target; \n    setMatchInputs({\n      ...matchInputs, \n      [name]: value \n    });\n  };\n\n  const removeVoca = (data, i) => {\n    // vocalist.splice(i, 1)\n    // engVocalist.splice(i, 1)\n    if (window.confirm('정말 삭제하시겠습니까?')) {\n      setVoca(vocalist.filter(voca => voca !== data));\n      setEngVoca(engVocalist.filter(voca => voca !== engVocalist[i]));\n      const currentObj = vocaObj.slice();\n      currentObj.splice(i, 1);\n      axios.delete(url,\n        { data: {\n          voca: data['voca'],\n          engvoca: data['engvoca'],\n          userId: cookies.get('user'),\n          } \n        }\n      )\n        .then(data => setVocaObj(currentObj))\n      return;\n      \n    } else {\n      return;\n    }  \n  }\n  \n  const finishTest = () => {\n    // let conclusionAnswer;\n    let count = 0;\n    let score;\n    const groupConclusion = [];\n    \n\n    for (const prop in inputs) {\n      if ( inputs[prop] ===  matchInputs[prop] ) { \n        // conclusionAnswer = `${prop} (${matchInputs[prop]}) 정답`;\n        // groupConclusion.push(conclusionAnswer);\n        const obj = {};\n        obj.question = prop;\n        obj.answer = matchInputs[prop];\n        obj.value = \"정답\";\n        groupConclusion.push(obj);\n        count += 1;\n      } else {       \n        // conclusionAnswer = `${prop} (${matchInputs[prop]}) 오답`;\n        // groupConclusion.push(conclusionAnswer);\n        const obj = {};\n        obj.question = prop;\n        obj.answer = matchInputs[prop];\n        obj.value = \"오답\";\n        groupConclusion.push(obj);\n      }\n    }\n\n    score = `${groupConclusion.length}개 중에 ${count}개 정답`;\n    setConclusion(groupConclusion);\n    setValue(false);\n    setScore(score);\n    setMatchInputs({});\n\n  }\n\n  const goMain = () => {\n    setTestValue(false);\n    setValue(true);\n  }\n\n  useEffect(() => {\n\n    async function get() {\n      const data = await axios.post(url, {});\n      setVocaObj(data.data);\n    }\n    get();\n    return () => {\n      localStorage.removeItem('userId');\n    };\n  }, []);\n\n  useBeforeunload((event) => \n    event.preventDefault()\n  );  \n\n  return (\n    <div style={{background : \"#8FC0A9\"}}>\n      <div id=\"container\">\n        {\n          !testValue ?\n          <div id='page-1'>\n            <div>\n              <div \n                style={{ \n                  fontSize : \"1.5rem\",\n                  color : \"#FAF3DD\",\n                  marginBottom : \"1rem\"\n                }}\n              >\n                Enter the Words\n              </div>\n              <form\n                id=\"add-container\"\n                onSubmit={addVoca}\n              >\n                <div style={{ margin : \"0 0 1rem 0\" }}>\n                  <div style={{ fontWeight : \"600\" , fontSize : \"1.3rem\" }}>영단어 기록하기</div>\n                  <div style={{ fontSize : \"0.5rem\" }}>단어장에 영단어를 기입하십시요\u001c</div>\n                </div>\n                <div className=\"voca-input\">\n                  <input\n                    placeholder=\"한글 입력\"\n                    className=\"input-style\"\n                    name=\"kor-input\"\n                    ref={inputRef}\n                    value={text}\n                    onChange={(e) => {\n                      changeVoca(e.target.value);\n                      clearText(e.target.value);\n                    }}\n                  />\n                </div>\n                <div style={{ marginBottom : \"4rem\" }} className=\"voca-input\">\n                  <input\n                    placeholder=\"영어 입력\"\n                    className=\"input-style\"\n                    name=\"eng-input\"\n                    value={engText}\n                    onChange={(e) => {\n                      changeEngVoca(e.target.value);\n                      clearEngText(e.target.value);\n                    }}\n                  />\n                </div>\n                <button\n                  type='submit'\n                  id='Jbutton'\n                >\n                  기록하기\n                </button>\n              </form>\n              <div \n                style={{\n                  width : \"100%\",\n                  background : \"white\",\n                  height : \"9rem\",\n                  borderRadius : \"5px\",\n                  display : \"flex\",\n                  flexDirection : \"column\",\n                  padding : \"1rem 0\",\n                  alignItems : \"center\",\n                  justifyContent : \"space-around\"\n                }}\n              >\n                <div\n                  style={{\n                    width : \"100%\",\n                    height: \"3rem\",                                      \n                    display : \"flex\",\n                    flexDirection : \"column\",                  \n                    alignItems : \"center\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  <div style={{ fontSize : \"1.2rem\", fontWeight : \"600\" }}>단어 시험 보기</div>\n                  <div style={{ fontSize : \"0.8rem\" }}>열심히 공부했나요? 영단어 테스트 보기</div>\n                </div>\n                <div style={{ width : \"80%\", display : \"flex\", justifyContent : \"space-around\"}}>\n                  <button\n                    className=\"test-button\"\n                    onClick={() => startTest('kor', vocalist, engVocalist)}\n                  >\n                    한글시험\n                  </button>\n                  <button\n                    className=\"test-button\"\n                    onClick={() => startTest('eng', engVocalist, vocalist)}\n                  >\n                    영어시험\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div className=\"voca-container\">\n              <div style={{ marginBottom : \"1rem\"}}>\n                <span \n                  style={{ \n                    fontSize : \"1.5rem\",\n                    color : \"#FAF3DD\"\n                  }}\n                >\n                  My WordBook\n                </span>\n                <span style={{ fontSize : \"0.8rem\", color : \"#FAF3DD\" }}> 내가 기록한 단어</span>\n              </div>\n              <div id=\"vocabulary\">\n                <div id=\"vocabulary-intro\">\n                    <div className='row-vocalist'>\n                        <div className=\"voca-element\">한글</div>\n                        <div className=\"voca-element\">영어</div>\n                        <div className=\"voca-remove-cover\">\n                          <div className=\"voca-remove-emty\"/>\n                        </div>\n                      </div>\n                      <hr className=\"driver\" />\n                </div>\n                {\n                  vocaObj.map((data, i) => (\n                    <div style={{ width : \"100%\" }}>\n                      <div className='row-vocalist'>\n                        <div className=\"voca-element\" key={i}>{data['voca']}</div>\n                        <div className=\"voca-element\" key={i + 'en'}>{data['engvoca']}</div>\n                        <div className=\"voca-remove-cover\">\n                          <button \n                            className=\"voca-remove\"\n                            onClick={() => removeVoca(data, i)}\n                          >\n                            삭제\n                          </button>\n                        </div>\n                      </div>\n                      <hr className=\"driver\" />\n                    </div>\n                  ))\n                }\n              </div>\n            </div>\n          </div>\n            :\n          <div> \n            {\n              language === 'kor' ?\n              <div>\n                {\n                  !value ?\n                  <div>\n                    <div style={{ marginBottom : \"1rem\"}}>\n                      <span \n                        style={{ \n                          fontSize : \"1.5rem\",\n                          color : \"#FAF3DD\"\n                        }}\n                      >\n                        Test Result\n                      </span>\n                      <span style={{ fontSize : \"0.8rem\", color : \"#FAF3DD\" }}> 시험 결과</span>\n                    </div>\n                      <div className=\"test-container\">\n                        <div style={{ width : \"90%\" }}>\n                            <div className='row-testlist-2'>\n                                <div className=\"voca-element\">입력한 한글</div>\n                                <div className=\"voca-element\">입력한 영어</div>\n                                <div className=\"voca-element\">결과</div>\n                              </div>\n                              <hr className=\"driver\" />\n                        </div>\n                        {\n                          conclusion.map((data, i) => (\n                            <div style={{ width : \"90%\"}}>\n                              <div className='row-testlist-2'>\n                                <div className=\"voca-element\">{data.question}</div>\n                                <div className=\"voca-element\">{data.answer}</div>\n                                <div \n                                  className=\"voca-element\" \n                                  style={{ \n                                    color : data.value === \"정답\" ? \"#39A2DB\" : \"#F55C47\"\n                                  }}\n                                >\n                                  {data.value}\n                                </div>\n                              </div>\n                                <hr className=\"driver\" />\n                            </div>\n                          ))\n                        }\n                      </div>\n                      <div style={{ width : \"100%\", display : \"flex\", justifyContent : \"space-between\"}}>\n                        <div style={{ fontSize : \"1.2rem\", fontWeight : \"600\", color : \"#FAF3DD\"}}>{score}</div>\n                        <div className=\"finish-button-container\">\n                          <button \n                            className=\"finish-button\"\n                            onClick={() => startTest('kor', vocalist, engVocalist)}\n                          >\n                            재시험 보기\n                          </button>\n                          <button\n                            className=\"finish-button\"\n                            onClick={goMain}\n                          >\n                            돌아가기\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                      :\n                    <div>\n                    <div style={{ marginBottom : \"1rem\"}}>\n                      <span \n                        style={{ \n                          fontSize : \"1.5rem\",\n                          color : \"#FAF3DD\"\n                        }}\n                      >\n                        Test Word\n                      </span>\n                      <span style={{ fontSize : \"0.8rem\", color : \"#FAF3DD\" }}> 단어시험</span>\n                    </div>\n                    <div className=\"test-container\">\n                      <div style={{ width : \"90%\" }}>\n                          <div className='row-testlist'>\n                              <div className=\"voca-element\">한글</div>\n                              <div className=\"voca-element\">영어</div>\n                            </div>\n                            <hr className=\"driver\" />\n                      </div>\n                      {\n                        testVoca2.map((data, i) => (\n                          <div style={{ width : \"90%\" }}>\n                            <div className='row-testlist'>\n                              <div className=\"voca-element\" key={i}>{data}</div>\n                              <div className=\"voca-element\">\n                                <input \n                                  className=\"test-inputs\" \n                                  name={data} \n                                  onChange={onChange}\n                                  autoComplete='off'\n                                />\n                              </div>\n                            </div>\n                              <hr className=\"driver\" />\n                          </div>\n                        ))\n                      }\n                    </div>\n                    <div id=\"finish-button-container\">\n                      <button className=\"finish-button\" onClick= {finishTest}>시험종료</button>\n                    </div>\n                  </div>\n                }\n              </div>\n                :\n              <div>\n                {\n                  !value ?\n                  <div>\n                    <div style={{ marginBottom : \"1rem\"}}>\n                      <span \n                        style={{ \n                          fontSize : \"1.5rem\",\n                          color : \"#FAF3DD\"\n                        }}\n                      >\n                        Test Result\n                      </span>\n                      <span style={{ fontSize : \"0.8rem\", color : \"#FAF3DD\" }}> 시험 결과</span>\n                    </div>\n                      <div className=\"test-container\">\n                        <div style={{ width : \"90%\" }}>\n                            <div className='row-testlist-2'>\n                                <div className=\"voca-element\">입력한 영어</div>\n                                <div className=\"voca-element\">입력한 한글</div>\n                                <div className=\"voca-element\">결과</div>\n                              </div>\n                              <hr className=\"driver\" />\n                        </div>\n                        {\n                          conclusion.map((data, i) => (\n                            <div style={{ width : \"90%\"}}>\n                              <div className='row-testlist-2'>\n                                <div className=\"voca-element\">{data.question}</div>\n                                <div className=\"voca-element\">{data.answer}</div>\n                                <div \n                                  className=\"voca-element\" \n                                  style={{ \n                                    color : data.value === \"정답\" ? \"#39A2DB\" : \"#F55C47\"\n                                  }}\n                                >\n                                  {data.value}\n                                </div>\n                              </div>\n                                <hr className=\"driver\" />\n                            </div>\n                          ))\n                        }\n                      </div>\n                      <div style={{ width : \"100%\", display : \"flex\", justifyContent : \"space-between\"}}>\n                        <div style={{ fontSize : \"1.2rem\", fontWeight : \"600\", color : \"#FAF3DD\"}}>{score}</div>\n                        <div className=\"finish-button-container\">\n                          <button \n                            className=\"finish-button\"\n                            onClick={() => startTest('Eng', engVocalist, vocalist)}\n                          >\n                            재시험 보기\n                          </button>\n                          <button\n                            className=\"finish-button\"\n                            onClick={goMain}\n                          >\n                            돌아가기\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                      :\n                    <div>\n                    <div style={{ marginBottom : \"1rem\"}}>\n                      <span \n                        style={{ \n                          fontSize : \"1.5rem\",\n                          color : \"#FAF3DD\"\n                        }}\n                      >\n                        Test Word\n                      </span>\n                      <span style={{ fontSize : \"0.8rem\", color : \"#FAF3DD\" }}> 단어시험</span>\n                    </div>\n                    <div className=\"test-container\">\n                      <div style={{ width : \"90%\" }}>\n                          <div className='row-testlist'>\n                              <div className=\"voca-element\">영어</div>\n                              <div className=\"voca-element\">한글</div>\n                            </div>\n                            <hr className=\"driver\" />\n                      </div>\n                      {\n                        testVoca2.map((data, i) => (\n                          <div style={{ width : \"90%\" }}>\n                            <div className='row-testlist'>\n                              <div className=\"voca-element\" key={i}>{data}</div>\n                              <div className=\"voca-element\">\n                                <input \n                                  className=\"test-inputs\" \n                                  name={data} \n                                  onChange={onChange}\n                                  autocomplete='off'\n                                />\n                              </div>\n                            </div>\n                              <hr className=\"driver\" />\n                          </div>\n                        ))\n                      }\n                    </div>\n                    <div id=\"finish-button-container\">\n                      <button className=\"finish-button\" onClick= {finishTest}>시험종료</button>\n                    </div>\n                  </div>\n                }\n              </div>\n            }\n          </div>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default withCookies(Main);\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useAlert } from \"react-alert\";\n\nfunction Firstpage() {\n\n  let url = 'http://3.34.140.114:5000/user';\n\n  const alert = useAlert();\n  \n  const [register, setRegister] = useState({ code : '', password : ''});\n  const [code, clearCode] = useState('');\n  const [password, clearPassword] = useState('');\n\n  const onChange = (e) => {\n    const { value, name } = e.target; \n    setRegister({\n      ...register, \n      [name]: value \n    });\n  };\n\n  const addUser = (e) => {\n    e.preventDefault();\n    if (register[\"code\"].length === 0 || register[\"password\"].length === 0) {\n      window.alert('빈공간없게 해주세요.');\n    } else if (isNaN(register[\"password\"]) || register[\"password\"].length !== 4) {\n      window.alert('비밀번호는 숫자와 4자리로 맞춰주세요.');\n    } else {\n      clearCode('');\n      clearPassword('');\n      axios.post(url, register)\n        .then(data => {\n          console.log(data);\n          alert.success(\"만들기 성공\");\n        })\n        .catch(err => alert.error('이 단어장은 이미 생성되어 있는 단어장입니다.'))\n    }\n  }\n\n  return (\n    <div id=\"login-container\">\n      <div>\n        <div>\n          <div \n            style={{ \n              fontSize : \"1.5rem\",\n              color : \"#FAF3DD\",\n              fontWeight : \"600\"\n            }}\n          >\n            Make my WordNote\n          </div>\n          <div style={{ fontSize : \"0.8rem\", color : \"#FAF3DD\" , marginBottom : \"1rem\"}}>나만의 단어장을 만들어보세요</div>\n        </div>\n        <form id=\"register-container\">\n          <div id='register-title'>\n            <div style={{ fontWeight : \"600\" , fontSize : \"1.3rem\" }}>나만의 단어장 만들기</div>\n            <div id='register-title-context'>\n              <div>\n                공부한 영어단어를 기입할 단어장을 만드세요.\n              </div>\n              <div>\n                단어장 이름과 비밀번호로 나만의 단어장을 생성할수 있습니다.\n              </div>\n              <div>\n                만들어진  단어장의 이름과 비밀번호를 입력하면 \n              </div>\n              <div>\n                언제든지 다시 들어갈 수 있도록요\n              </div>\n            </div>\n          </div>\n          <div id=\"register-text\">\n            <div className=\"register-text-row\">\n              <span className=\"register-text-name\">나의 단어장 이름: </span>\n              <input \n                name=\"code\"\n                placeholder=\"단어장 입력\"\n                value={code}\n                className=\"register-inputs\"\n                onChange={(e) => {\n                  onChange(e);\n                  clearCode(e.target.value);\n                }}\n                style={{imeMode : 'active'}}\n                type='text'\n              />\n            </div>\n            <div className=\"register-text-row\">\n              <span className=\"register-text-name\">단어장 비밀번호: </span>\n              <input \n                name=\"password\"\n                placeholder=\"비밀번호 (숫자, 4자리)\"\n                type=\"password\"\n                value={password}\n                className=\"register-inputs\"\n                onChange={(e) => {\n                  onChange(e);\n                  clearPassword(e.target.value);\n                }}\n              />\n            </div>\n          </div>\n          <button\n            id=\"register-button\"\n            onClick={addUser}\n          >\n            새로운 단어장 만들기\n          </button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default Firstpage;","import React,{ useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { withCookies } from 'react-cookie';\n\nimport Main from './pages/Main';\nimport Firstpage from './pages/Firstpage';\nimport './App.css';\n\nfunction App(props) {\n\n  let url = 'http://3.34.140.114:5000/login';\n\n  const [login, setLogin] = useState(\"실패\");\n\n  const [loginData, setLoginData] = useState({ code : '', password : ''});\n\n  const [code, clearCode] = useState('');\n\n  const [password, clearPassword] = useState('');\n\n  const onChange = (e) => {\n    const { value, name } = e.target; \n    setLoginData({\n      ...loginData, \n      [name]: value \n    });\n  };\n\n  const goMain = () => {\n    setLogin('성공');\n  }\n\n  const goLogin = async () => {\n    await axios.get(url);  \n    setLogin('실패');\n  }\n\n  const feedback = () => {\n    if (window.confirm('피드백 하러 가시겠습니까?')) {\n      return window.location.href = \"https://docs.google.com/forms/d/e/1FAIpQLSe5f-w3Lw-m2J-WPaKTbdAveReoWglcXu53QhFCCYEFLAY87w/viewform?usp=sf_link\"\n    } else {\n      console.log('false');\n      return;\n    }\n  }\n\n  const check = (e) => {\n    e.preventDefault();\n    if (loginData.code === '') {\n      window.alert('단어장을 입력해주세요.');\n      return;\n    } else {\n      if (loginData.password === '') {\n        window.alert('비밀번호를 입력해주세요.');\n        return;\n      } else {\n        axios.post(url, loginData)\n          .then(req => {\n            setLoginData({ code : '', password : ''});\n            clearCode('');\n            clearPassword('');\n            const token = req.data.userId;\n            localStorage.setItem('userId', token);\n            console.log(req);\n            goMain();\n          })\n          .catch(err => {\n            window.alert('아이디, 비밀번호를 확인해주세요.');\n          })\n      }\n    }\n  }\n\n  useEffect(() => {\n    let result = '실패';\n    async function post() {\n      const data = await axios.post(url,{});\n      if (data.data) {\n        result = '성공';\n      }\n      setLogin(result);\n    }\n    post();\n    return () => {\n    };\n  }, []);\n\n  return (\n    <div style={{ height : \"100%\"}}>\n      <div id=\"nav\">\n        <button \n          id=\"logo\"\n          onClick={feedback}\n          style={{\n            textDecoration: 'none',\n            color: '#FAF3DD',\n          }}\n        >\n          <div>Word Note</div>\n          <div \n            style={{ \n              fontSize : \"1.1rem\",\n              width : \"100%\",  \n              display : \"flex\", \n              justifyContent : \"center\"\n            }}\n          >\n            나만의 단어장\n          </div>\n        </button>\n        {\n          login === '실패' ?\n          <form\n            className=\"nav-login\"\n            onSubmit={check}\n          >\n            <input \n              onChange={(e) => {\n                onChange(e);\n                clearCode(e.target.value);\n              }}\n              className=\"login-inputs\"\n              placeholder=\"단어장 입력\"\n              name=\"code\"\n              type='text'\n              value={code}\n              style={{imeMode : 'active'}}\n            />\n            <input \n              onChange={(e) => {\n                onChange(e);\n                clearPassword(e.target.value);\n              }}\n              className=\"login-inputs\"\n              placeholder=\"비밀번호 입력\"\n              value={password}\n              name=\"password\"\n              type='password'\n            />\n            <button className =\"login-button\" type=\"submit\" >\n              로그인\n            </button>\n          </form>\n            :\n          <div className='logout-container'>\n            <button\n              className =\"login-button\"\n              onClick={goLogin}\n            >\n              로그아웃\n            </button>\n          </div>\n        }\n      </div>\n      <div style={{ height : '100%' }}>\n        {\n          login === '성공' ?\n          <Main />\n            :\n          <Firstpage />\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default withCookies(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CookiesProvider } from 'react-cookie';\nimport { positions, Provider } from \"react-alert\";\nimport AlertTemplate from 'react-alert-template-basic';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst options = {\n  timeout: 3000,\n  position: positions.BOTTOM_CENTER\n};\n\nReactDOM.render(\n  <CookiesProvider>\n    <Provider template={AlertTemplate}  {...options}>\n      <App />\n    </Provider>\n  </CookiesProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}